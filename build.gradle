/*
 * Copyright (c) 2013, IT Services, Stockholm University
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * Neither the name of Stockholm University nor the names of its contributors
 * may be used to endorse or promote products derived from this software
 * without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

buildscript {
  repositories { mavenCentral() }
  dependencies { classpath 'org.ajoberstar:gradle-git:0.1.0' }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'git'

version = "1.5.1"
group = "se.su.it.cognos"
archivesBaseName = "cognosshibauth"

repositories {
  mavenCentral()
  mavenLocal()

  maven {
    url "http://maven.it.su.se/it.su.se/maven2"
    url "http://repository.codehaus.org/"
    url "http://files.couchbase.com/maven2/"
  }
}

configurations {
    provided
    testCompile.extendsFrom provided
    compile.transitive = true
}

// Added the provided dependency to compile classpath
sourceSets.main.compileClasspath += configurations.provided

dependencies {
  groovy group: 'org.codehaus.groovy', name: 'groovy-all', version: '1.8.6'

  provided group: 'com.cognos.CAM_AAA', name: 'authentication', version: '10.1.4707.507'

  compile group: 'commons-configuration', name: 'commons-configuration', version: '1.6'
  compile group: 'org.codehaus', name: 'gldapo', version: '0.8.5'
  compile group: 'spy', name: 'spymemcached', version: '2.6'

  testCompile group: 'junit', name: 'junit', version: '4.8.2'
  testCompile group: 'org.mockito', name: 'mockito-all', version: '1.8.5'
  testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.4.9'
  testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.4.9'
  testCompile group: 'org.spockframework', name: 'spock-core', version: '0.6-groovy-1.8'
  testCompile group: 'cglib', name: 'cglib', version: '2.2.2'
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file:///afs/su.se/services/maven/it.su.se/maven2/")
        }
    }
}

jar {
  //GIT integration testing:
  //def git = git.open('file://./')
  //println(git.class)
  //git.log().call().next().getFullMessage()
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.0'
}
